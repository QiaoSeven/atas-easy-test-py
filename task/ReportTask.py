import datetime
import platform
import re
import time

from selenium.webdriver import Keys

from object.ReportObject import ReportObject
from object.ProjectObject import ProjectObject
from object.SuiteObject import SuiteObject
from task.BaseTask import BaseTask
from util.TimeUtil import TimeUtil


class ReportTask(BaseTask):
    def __init__(self, driver, data, capture, logger, atas_api):
        BaseTask.__init__(self, driver, data, capture, logger, atas_api)
        self.pro = ProjectObject(self.driver)
        self.suite = SuiteObject(self.driver)
        self.report = ReportObject(self.driver)

    def create_report(self, if_project, if_verify):
        # 一、准备数据
        case_desc = self.data['case_desc']
        user_name = self.data['user_name']
        report_name = self.data['report_name']
        summary = self.data['summary']
        report_type = self.data['report_type']
        pass_ratio = self.data['pass_ratio']
        move_item = self.data['move_item']
        save_option_create = self.data['save_option_create']
        suffix_time = (datetime.datetime.now()).strftime("%Y-%m-%d %H:%M:%S")
        global rp_name
        rp_name = report_name + suffix_time
        # 二、开始操作。创建report
        if if_project:
            project_element = self.pro.project_to_report_btn()
            project_element.click()
        self.report.report_new_report_btn().click()
        self.report.report_report_name().send_keys(rp_name)
        self.report.report_report_summary().send_keys(summary)
        self.report.report_report_type(report_type).click()
        time.sleep(3)
        if report_type == 'Execution':
            self.report.report_cal_ratio_radio(pass_ratio).click()
            time.sleep(1)
        self.verify.verify_empty(self.report.report_report_all_list_empty())
        if move_item == 'All':
            self.report.report_report_move_all().click()
        else:
            # move_item == 'Single'. Move item in first row
            self.report.report_report_move_single().click()

        global rp_selected_list
        rp_selected_list = []
        s_list = self.report.report_report_selected_list()
        for s in s_list:
            name = s.text
            rp_selected_list.append(name)

        self.capture.capture_all(case_desc + "-1.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-1.png",
                                                         "Create new report by select " + str(move_item) + " item")
        start_time = TimeUtil.get_current_time()
        end_time = TimeUtil.get_current_time()
        if self.if_upload_atas:
            self.atas_api.upload_result(
                self.result.get_upload_result("Create new report by select " + str(move_item) + " item",
                                              self.capture.get_full_path(case_desc + "-1.png"),
                                              None, start_time,
                                              end_time))

        time.sleep(1)
        self.report.report_report_save_button(save_option_create).click()
        time.sleep(3)
        # 三、校验结果
        if if_verify:
            # 校验点1：Modal Window关闭
            report_modal_window = self.report.create_report_modal_window()
            self.verify.verify_modal_window(report_modal_window)

            self.report.report_search_bar().send_keys(report_name + suffix_time)
            self.report.report_search_icon().click()
            time.sleep(1)
            # 校验点2：列表下状态图标（是否run）显示正确
            actual_report_status = self.report.search_result_status().get_attribute('class')
            if save_option_create == 'Save':
                expect_report_status = "question"
            else:
                # save_option_create == 'Save And Run'
                expect_report_status = "check"
            self.verify.verify_report_list_summary(actual_report_status, expect_report_status)
            # 校验点3：列表下name显示正确
            actual_report_name = self.report.search_result_name().text
            expect_report_name = rp_name
            self.verify.verify_report_list(actual_report_name, expect_report_name)
            # 校验点4：列表下summary显示正确
            actual_report_summary = self.report.search_result_summary().text
            expect_report_summary = summary
            self.verify.verify_report_list_summary(actual_report_summary, expect_report_summary)
            # 校验点5：列表下report type显示正确
            actual_report_type = self.report.search_result_type().text
            if report_type == 'Execution':
                expect_report_type = report_type
            else:
                expect_report_type = 'RTM'
            self.verify.verify_report_list(actual_report_type, expect_report_type)
            # 校验点6：列表下generated time不校验
            # 校验点7：列表下generated by显示正确
            actual_report_by = self.report.search_result_account().text
            expect_report_by = user_name
            self.verify.verify_report_list(actual_report_by, expect_report_by)

        end_time = TimeUtil.get_current_time()
        self.capture.capture_all(case_desc + "-2.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-2.png",
                                                         "New report is created and displayed correctly")
        if self.if_upload_atas:
            self.atas_api.upload_result(self.result.get_upload_result("New report is created and displayed correctly",
                                                                      self.capture.get_full_path(case_desc + "-2.png"),
                                                                      None, start_time,
                                                                      end_time))

    def search_report(self, if_project, if_verify, browser_data):
        # 一、准备数据
        case_desc = self.data['case_desc']
        search_keyword = self.data['search_keyword']
        # 二、开始操作。搜索report
        if if_project:
            project_element = self.pro.project_to_report_btn()
            project_element.click()
        self.report.report_search_bar().send_keys(search_keyword)

        self.capture.capture_all(case_desc + "-1.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-1.png",
                                                         "Search report by keyword " + str(search_keyword) + "")
        start_time = TimeUtil.get_current_time()
        end_time = TimeUtil.get_current_time()
        if self.if_upload_atas:
            self.atas_api.upload_result(
                self.result.get_upload_result("Search report by keyword " + str(search_keyword) + "",
                                              self.capture.get_full_path(case_desc + "-1.png"),
                                              None, start_time,
                                              end_time))

        self.report.report_search_icon().click()
        time.sleep(3)
        # 三、校验结果
        if if_verify:
            # 校验点1：搜索结果包含搜索关键字
            names = []
            rows = self.report.report_search_result_list()
            for row in rows:
                name = row.text
                names.append(name)
            expect_search_result = search_keyword
            self.verify.verify_search_result(names, expect_search_result)

        end_time = TimeUtil.get_current_time()
        self.capture.capture_all(case_desc + "-2.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-2.png", "Reports are searched by keyword")
        if self.if_upload_atas:
            self.atas_api.upload_result(
                self.result.get_upload_result("Reports are searched by keyword",
                                              self.capture.get_full_path(case_desc + "-2.png"),
                                              None, start_time,
                                              end_time))

        # 四、还原。清空输入框
        plat = platform.system().lower()
        if plat == "darwin" and ('remote' not in str(browser_data)):
            self.report.report_search_bar().send_keys(Keys.COMMAND, "a")
        else:
            self.report.report_search_bar().send_keys(Keys.CONTROL, "a")
        self.report.report_search_bar().send_keys(Keys.DELETE)
        self.report.report_search_icon().click()

    def edit_report(self, if_project, if_verify, browser_data):
        # 一、准备数据
        global rp_name
        case_desc = self.data['case_desc']
        new_report_name = self.data['new_report_name']
        save_option_edit = self.data['save_option_edit']
        suffix_time = (datetime.datetime.now()).strftime("%Y-%m-%d %H:%M:%S")
        # 二、开始操作。编辑第一个report/创建的report
        if if_project:
            project_element = self.pro.project_to_report_btn()
            project_element.click()
        else:
            self.report.report_search_bar().send_keys(rp_name)
            self.report.report_search_icon().click()
            time.sleep(3)
        self.report.action_button_edit().click()
        plat = platform.system().lower()
        if plat == "darwin" and ('remote' not in str(browser_data)):
            self.report.report_report_name().send_keys(Keys.COMMAND, "a")
        else:
            self.report.report_report_name().send_keys(Keys.CONTROL, "a")
        self.report.report_report_name().send_keys(Keys.DELETE)
        self.report.report_report_name().send_keys(new_report_name + suffix_time)

        self.capture.capture_all(case_desc + "-1.png")
        if self.if_upload_rp:
            if if_project:
                self.capture.upload_capture_to_report_portal(case_desc + "-1.png", "Edit first report")
            else:
                self.capture.upload_capture_to_report_portal(case_desc + "-1.png", "Edit created report")
        start_time = TimeUtil.get_current_time()
        end_time = TimeUtil.get_current_time()
        if self.if_upload_atas:
            if if_project:
                step_desc = 'Edit first report'
            else:
                step_desc = 'Edit created report'
            self.atas_api.upload_result(
                self.result.get_upload_result(step_desc,
                                              self.capture.get_full_path(case_desc + "-1.png"),
                                              None, start_time,
                                              end_time))

        self.report.report_report_save_button(save_option_edit).click()
        time.sleep(3)
        # 三、还原。清空输入框
        if not if_project:
            if plat == "darwin" and ('remote' not in str(browser_data)):
                self.report.report_search_bar().send_keys(Keys.COMMAND, 'a')
            else:
                self.report.report_search_bar().send_keys(Keys.CONTROL, 'a')
            self.report.report_search_bar().send_keys(Keys.DELETE)
            self.report.report_search_icon().click()
        # 四、校验结果
        if if_verify:
            # 校验点1：Modal Window关闭
            modal_window = self.report.create_report_modal_window()
            self.verify.verify_modal_window(modal_window)
            # 校验点2：编辑的name正确
            self.report.report_search_bar().click()
            self.report.report_search_bar().send_keys(new_report_name + suffix_time)
            self.report.report_search_icon().click()
            time.sleep(1)
            actual_new_name = self.report.search_result_name().text
            expect_new_name = new_report_name + suffix_time
            self.verify.verify_new_report_name(actual_new_name, expect_new_name)

        end_time = TimeUtil.get_current_time()
        self.capture.capture_all(case_desc + "-2.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-2.png", "Report is edited")
        if self.if_upload_atas:
            self.atas_api.upload_result(
                self.result.get_upload_result("Report is edited",
                                              self.capture.get_full_path(case_desc + "-2.png"),
                                              None, start_time,
                                              end_time))

    def regenerate_report(self, if_project, if_verify):
        # 一、准备数据
        global rp_name
        case_desc = self.data['case_desc']
        # 二、开始操作。重新生成第一个report/创建的report
        if if_project:
            project_element = self.pro.project_to_report_btn()
            project_element.click()
        else:
            self.report.report_search_bar().click()
            self.report.report_search_bar().send_keys(rp_name)
            self.report.report_search_icon().click()
            time.sleep(3)

        self.capture.capture_all(case_desc + "-1.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-1.png", "Regenerate created report")
        start_time = TimeUtil.get_current_time()
        end_time = TimeUtil.get_current_time()
        if self.if_upload_atas:
            self.atas_api.upload_result(
                self.result.get_upload_result("Regenerate created report",
                                              self.capture.get_full_path(case_desc + "-1.png"),
                                              None, start_time,
                                              end_time))

        self.report.action_button_run().click()
        time.sleep(3)
        # 三、校验结果
        if if_verify:
            # 校验点1：状态更新
            actual_report_status = self.report.search_result_status().get_attribute('class')
            expect_report_status = "check"
            self.verify.verify_report_list_summary(actual_report_status, expect_report_status)

        end_time = TimeUtil.get_current_time()
        self.capture.capture_all(case_desc + "-2.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-2.png", "Created report is regenerated")
        if self.if_upload_atas:
            self.atas_api.upload_result(
                self.result.get_upload_result("Created report is regenerated",
                                              self.capture.get_full_path(case_desc + "-2.png"),
                                              None, start_time,
                                              end_time))

    def delete_report(self, if_project, if_verify, browser_data):
        # 一、准备数据
        global rp_name
        case_desc = self.data['case_desc']
        # 二、开始操作。删除第一个report/创建的report
        if if_project:
            project_element = self.pro.project_to_report_btn()
            project_element.click()
        else:
            self.report.report_search_bar().click()
            self.report.report_search_bar().send_keys(rp_name)
            self.report.report_search_icon().click()
            time.sleep(3)
        deleted_name = self.report.search_result_name().text
        self.report.action_button_delete().click()

        self.capture.capture_all(case_desc + "-1.png")
        if self.if_upload_rp:
            if if_project:
                self.capture.upload_capture_to_report_portal(case_desc + "-1.png", "Delete first report")
            else:
                self.capture.upload_capture_to_report_portal(case_desc + "-1.png", "Delete created report")
        start_time = TimeUtil.get_current_time()
        end_time = TimeUtil.get_current_time()
        if self.if_upload_atas:
            if if_project:
                step_desc = "Delete first report"
            else:
                step_desc = "-1.png", "Delete created report"
            self.atas_api.upload_result(
                self.result.get_upload_result(step_desc,
                                              self.capture.get_full_path(case_desc + "-1.png"),
                                              None, start_time,
                                              end_time))

        self.report.report_delete_yes_button().click()
        time.sleep(3)
        # 三、还原。清空输入框
        plat = platform.system().lower()
        if not if_project:
            if plat == "darwin" and ('remote' not in str(browser_data)):
                self.report.report_search_bar().send_keys(Keys.COMMAND, 'a')
            else:
                self.report.report_search_bar().send_keys(Keys.CONTROL, 'a')
            self.report.report_search_bar().send_keys(Keys.DELETE)
            self.report.report_search_icon().click()
        # 四、校验结果
        if if_verify:
            # 校验点1：Modal window关闭
            modal_window = self.report.delete_report_modal_window()
            self.verify.verify_modal_window(modal_window)
            # 校验点2：确认report被删除
            self.report.report_search_bar().click()
            self.report.report_search_bar().send_keys(deleted_name)
            self.report.report_search_icon().click()
            time.sleep(3)
            no_data = self.report.no_data()
            self.verify.verify_report_deletion(no_data)

        end_time = TimeUtil.get_current_time()
        self.capture.capture_all(case_desc + "-2.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-2.png", "Report is deleted")
        if self.if_upload_atas:
            self.atas_api.upload_result(
                self.result.get_upload_result("Report is deleted",
                                              self.capture.get_full_path(case_desc + "-2.png"),
                                              None, start_time,
                                              end_time))

    def view_report(self, if_project, if_verify, verify_which):
        # 一、准备数据
        global rp_name, rp_selected_list
        case_desc = self.data['case_desc']
        report_type = self.data['report_type']
        summary = self.data['summary']
        save_option_create = self.data['save_option_create']
        # 二、开始操作。查看创建的report
        if if_project:
            time.sleep(1)
            project_element = self.pro.project_to_report_btn()
            project_element.click()
        self.report.report_search_bar().click()
        self.report.report_search_bar().send_keys(rp_name)
        self.report.report_search_icon().click()
        time.sleep(3)
        if save_option_create == 'Save':
            self.logger.info("Created report is not running. Will run this report to view it")
            self.report.action_button_run().click()
            time.sleep(2)
        self.report.search_result_name().click()
        time.sleep(3)

        self.capture.capture_all(case_desc + "-1.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-1.png", "View created report")
        start_time = TimeUtil.get_current_time()
        end_time = TimeUtil.get_current_time()
        if self.if_upload_atas:
            self.atas_api.upload_result(
                self.result.get_upload_result("View created report",
                                              self.capture.get_full_path(case_desc + "-1.png"),
                                              None, start_time,
                                              end_time))


        time.sleep(3)
        # 三、校验结果
        if if_verify:
            # 校验点1：title正确显示
            actual_rp_name = self.report.report_view_title().text
            expect_rp_name = rp_name
            self.verify.verify_view_report_same(actual_rp_name, expect_rp_name)
            # 校验点2：summary正确显示
            actual_rp_sum = self.report.report_view_summary().text
            expect_rp_sum = summary
            self.verify.verify_view_report_same(actual_rp_sum, expect_rp_sum)
            if report_type == 'Requirement':
                # 校验点3：requirement case info的标题正确显示
                self.report.rtm_report_view_case_info_activate().click()
                actual_case_info_title = self.report.rtm_report_view_case_info_title().text
                expect_case_info_title = 'Requirement Case Information'
                self.verify.verify_view_report_text_contain_text(actual_case_info_title, expect_case_info_title)
                # 校验点4：traceability general info的标题和内容正确显示
                actual_trace_info_title = self.report.rtm_report_view_trace_info_title().text
                expect_trace_info_title = 'Traceability General Information'
                self.verify.verify_view_report_text_contain_text(actual_trace_info_title, expect_trace_info_title)

                actual_trace_info_content = []
                t_list = self.report.rtm_report_view_trace_info_all_list()
                for t in t_list:
                    name = "".join(re.findall('(?<=\)).*$', t.text))
                    actual_trace_info_content.append(name)
                expect_trace_info_content = rp_selected_list
                self.verify.verify_view_report_contain_list(actual_trace_info_content, expect_trace_info_content)
                # 校验点5：requirement issues的标题和内容正确显示
                actual_issue_info_title = self.report.rtm_report_view_issue_info_title().text
                expect_issue_info_title = 'Requirement Issues'
                self.verify.verify_view_report_text_contain_text(actual_issue_info_title, expect_issue_info_title)

                actual_issue_info_content = []
                i_list = self.report.rtm_report_view_issue_info_all_list()
                for i in i_list:
                    name = "".join(re.findall('(?<=\)).*$', i.text))
                    actual_issue_info_content.append(name)
                expect_issue_info_content = rp_selected_list
                self.verify.verify_view_report_contain_list(actual_issue_info_content, expect_issue_info_content)
            else:
                # report_type == 'Execution'
                if 'Test Runs' in verify_which:
                    # 校验点3：test runs的标题正确显示
                    actual_test_runs_title = self.report.exec_report_view_test_runs_title().text
                    expect_test_runs_title = 'Test Runs'
                    self.verify.verify_view_report_equal_to(actual_test_runs_title, expect_test_runs_title)
                    # 校验点4：test runs列表的name正确显示
                    actual_test_runs_content = []
                    t_list = self.report.exec_report_view_test_runs_name_list()
                    for t in t_list:
                        name = t.text
                        actual_test_runs_content.append(name)
                    expect_test_runs_content = rp_selected_list
                    self.verify.verify_view_report_contain_list(actual_test_runs_content, expect_test_runs_content)
                    if len(verify_which) > 1:
                        # 提取数据
                        rows = len(t_list)
                        i = 1
                        all_case_total = 0
                        pass_case_total = 0
                        tested_case_total = 0
                        all_issue_total = 0
                        open_issue_total = 0
                        while i <= rows:
                            all_plus = int(self.report.exec_report_view_test_runs_total_list(i).text)
                            pass_plus = int(self.report.exec_report_view_test_runs_passed_list(i).text)
                            tested_plus = int(self.report.exec_report_view_test_runs_passed_list(i).text) + int(
                                self.report.exec_report_view_test_runs_failed_list(i).text) + \
                                          int(self.report.exec_report_view_test_runs_blocked_list(i).text) + int(
                                self.report.exec_report_view_test_runs_retested_list(i).text)
                            alli_plus = int("".join(
                                re.findall('(?<=/).*$', self.report.exec_report_view_test_runs_issues_list(i).text)))
                            open_plus = int("".join(
                                re.findall(r'^(.*?)/', self.report.exec_report_view_test_runs_issues_list(i).text)))
                            all_case_total += all_plus
                            pass_case_total += pass_plus
                            tested_case_total += tested_plus
                            all_issue_total += alli_plus
                            open_issue_total += open_plus
                            i += 1

                if 'Pass Ratio' in verify_which:
                    # 校验点5：pass ratio的标题正确显示
                    actual_pass_ratio_title = self.report.exec_report_view_pass_ratio_title().text
                    expect_pass_ratio_title = 'Pass Ratio'
                    self.verify.verify_view_report_equal_to(actual_pass_ratio_title, expect_pass_ratio_title)
                    if 'Test Runs' in verify_which:
                        if all_case_total != 0:
                            # 校验点6：pass ratio的pass ratio正确显示
                            num_1 = pass_case_total
                            den_1 = all_case_total
                            expect_pass_ratio = str(round(num_1 * 100 / den_1, 1))
                            actual_pass_ratio = "".join(
                                re.findall(r'^(.*?)%', self.report.exec_report_pass_ratio_pass_ratio().text))
                            self.verify.verify_view_report_equal_to(actual_pass_ratio, expect_pass_ratio)
                            # 校验点7：pass ratio的tested ratio正确显示
                            num_2 = tested_case_total
                            den_2 = all_case_total
                            expect_test_ratio = str(round(num_2 * 100 / den_2, 1))
                            actual_test_ratio = "".join(
                                re.findall(r'^(.*?)%', self.report.exec_report_pass_ratio_test_ratio().text))
                            self.verify.verify_view_report_equal_to(actual_test_ratio, expect_test_ratio)
                if 'Cases' in verify_which:
                    # 校验点8：cases的标题正确显示
                    actual_cases_title = self.report.exec_report_view_cases_title().text
                    expect_cases_title = 'Cases'
                    self.verify.verify_view_report_equal_to(actual_cases_title, expect_cases_title)
                    # 校验点9：cases的%正确显示
                    den_3 = int(self.report.exec_report_view_cases_est().text)
                    if den_3 != 0:
                        num_3 = int(self.report.exec_report_view_cases_eff().text)
                        expect_est_ratio = str(round(num_3 * 100 / den_3, 1))
                        actual_est_ratio = "".join(
                            re.findall(r'^(.*?)%', self.report.exec_report_view_cases_per().text))
                        self.verify.verify_view_report_equal_to(actual_est_ratio, expect_est_ratio)
                    if 'Test Runs' in verify_which:
                        # 校验点10：cases的total正确显示
                        total_cases = self.report.exec_report_view_cases_tot().text
                        self.verify.verify_view_report_equal_to(all_case_total, int(total_cases))
                if 'Productivity' in verify_which:
                    # 校验点11：productivity的标题正确显示
                    actual_prod_title = self.report.exec_report_view_prod_title().text
                    expect_prod_title = 'Productivity'
                    self.verify.verify_view_report_equal_to(actual_prod_title, expect_prod_title)
                if 'Bugs' in verify_which:
                    # 校验点12：bugs的标题正确显示
                    actual_bug_title = self.report.exec_report_view_bug_title().text
                    expect_bug_title = 'Bugs'
                    self.verify.verify_view_report_equal_to(actual_bug_title, expect_bug_title)
                    if 'Test Runs' in verify_which:
                        # 校验点13：bugs的bug rate正确显示
                        if tested_case_total != 0:
                            num_4 = all_issue_total
                            den_4 = tested_case_total
                            expect_bug_rate = str(round(num_4 * 100 / den_4, 1))
                            actual_bug_rate = "".join(
                                re.findall(r'^(.*?)%', self.report.exec_report_view_bug_rate().text))
                            self.verify.verify_view_report_equal_to(actual_bug_rate, expect_bug_rate)
                        if all_issue_total > 0:
                            # 校验点14：bugs的summary table正确显示
                            sum_list = self.report.exec_report_view_bug_rate_sum_list_len()
                            sum_rows = len(sum_list)
                            i = 1
                            all_issues = 0
                            open_issues = 0
                            while i <= sum_rows:
                                alli_plus = int(self.report.exec_report_view_bug_rate_sum_total_list(i).text)
                                openi_plus = int(self.report.exec_report_view_bug_rate_sum_open_list(i).text)
                                all_issues += alli_plus
                                open_issues += openi_plus
                                i += 1
                            self.verify.verify_view_report_equal_to(all_issues, all_issue_total)
                            self.verify.verify_view_report_equal_to(open_issues, open_issue_total)
                            # 校验点15：bugs的info table正确显示
                            info_list = self.report.exec_report_view_bug_rate_info_list_len()
                            info_rows = len(info_list)
                            self.verify.verify_view_report_equal_to(info_rows, all_issue_total)

        end_time = TimeUtil.get_current_time()
        self.capture.capture_all(case_desc + "-2.png")
        if self.if_upload_rp:
            self.capture.upload_capture_to_report_portal(case_desc + "-2.png", "Created report is displayed correctly")
        if self.if_upload_atas:
            self.atas_api.upload_result(
                self.result.get_upload_result("Created report is displayed correctly",
                                              self.capture.get_full_path(case_desc + "-2.png"),
                                              None, start_time,
                                              end_time))
